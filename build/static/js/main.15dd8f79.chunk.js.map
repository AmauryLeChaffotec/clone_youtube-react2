{"version":3,"sources":["components/Header/Header.js","components/SideBarRow/SideBarRow.js","components/SideBar/SideBar.js","components/VideoCard/VideoCard.js","components/RecommendedVideos/RecommendedVideos.js","components/ChannelRow/ChannelRow.js","components/VideoRow/VideoRow.js","components/SearchPage/SearchPage.js","components/Video/Video.js","components/VideoInfo/VideoInfo.js","components/VideoPlayer/VideoPlayer.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","inputSearch","setInputSearch","className","to","src","alt","TextField","style","width","id","value","onChange","e","target","label","variant","Avatar","stc","SideBarRow","selected","Icon","title","SideBar","HomeIcon","WhatshotIcon","SubscriptionsIcon","VideoLibraryIcon","HistoryIcon","OndemandVideoIcon","WatchLaterIcon","ThumbUpIcon","VideoCard","image","channel","views","timestamp","channelImage","RecommendedVideos","videoCards","setVideoCards","isLoading","setIsLoading","isError","setIsError","videoItems","a","newVideoCards","video","videoId","snippet","channelId","axios","get","process","response","data","items","thumbnails","medium","url","statistics","viewCount","DateTime","fromISO","publishedAt","toRelative","channelTitle","push","useEffect","then","createVideoCards","catch","error","console","log","Alert","severity","CircularProgress","color","map","item","key","ChannelRow","subs","noOfVideos","description","VideoRow","SearchPage","props","searchQuery","useParams","channelRow","setChannelRow","videoRows","setVideoRows","videoCount","subscriberCount","videos","newVideoRows","createChannelRow","createVideoRows","Video","VideoInfo","publishedDate","likeCount","dislikeCount","ThumbDownIcon","ReplyIcon","PlaylistAddIcon","MoreHorizIcon","Button","VideoPlayer","videoInfo","setVideoInfo","stats","Date","toLocaleDateString","day","month","year","createVideoInfo","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yjBAyDeA,MA3Cf,WAAoB,IAAD,EAEuBC,mBAAS,IAFhC,mBAERC,EAFQ,KAEKC,EAFL,KAIf,OACI,yBAAKC,UAAU,UACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMC,GAAG,KACN,yBACCD,UAAU,eACVE,IAAI,eACJC,IAAI,OAOV,yBAAKH,UAAU,kBAEb,kBAACI,EAAA,EAAD,CAAWC,MAAO,CAACC,MAAM,OAAQC,GAAG,iBAAiBC,MAAOV,EAAaW,SAAU,SAACC,GAAD,OAAOX,EAAeW,EAAEC,OAAOH,QAAQI,MAAM,aAAaC,QAAQ,aAErJ,kBAAC,IAAD,CAAMZ,GAAE,kBAAaH,IACnB,kBAAC,IAAD,CAAYE,UAAU,2BAK1B,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAeA,UAAU,iBACzB,kBAAC,IAAD,CAAUA,UAAU,iBACpB,kBAAC,IAAD,CAAmBA,UAAU,iBAC7B,kBAACc,EAAA,EAAD,CACEX,IAAI,sBACJY,IAAI,6DCpCHC,G,OATI,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACjC,OACI,yBAAKnB,UAAS,qBAAgBiB,EAAW,WAAY,KACjD,kBAACC,EAAD,CAAMlB,UAAU,qBAChB,wBAAIA,UAAU,qBAAqBmB,M,iJCsBhCC,EAjBC,WACZ,OACI,yBAAKpB,UAAU,WACX,kBAAC,EAAD,CAAYiB,UAAQ,EAACC,KAAMG,IAAUF,MAAM,SAC3C,kBAAC,EAAD,CAAYD,KAAMI,IAAcH,MAAM,aACtC,kBAAC,EAAD,CAAYD,KAAMK,IAAmBJ,MAAM,iBAC3C,6BACA,kBAAC,EAAD,CAAYD,KAAMM,IAAkBL,MAAM,YAC1C,kBAAC,EAAD,CAAYD,KAAMO,IAAaN,MAAM,YACrC,kBAAC,EAAD,CAAYD,KAAMQ,IAAmBP,MAAM,gBAC3C,kBAAC,EAAD,CAAYD,KAAMS,IAAgBR,MAAM,gBACxC,kBAAC,EAAD,CAAYD,KAAMU,IAAaT,MAAM,gBACrC,+B,iCCDGU,G,OApBG,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,MAAOX,EAAoD,EAApDA,MAAOY,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aACzD,OACI,yBAAKlC,UAAU,aACb,yBAAKA,UAAU,mBAAmBE,IAAK4B,EAAO3B,IAAI,KAClD,yBAAKH,UAAU,mBACb,kBAACc,EAAA,EAAD,CACEd,UAAU,oBACVG,IAAK4B,EACL7B,IAAKgC,IAEP,yBAAKlC,UAAU,mBACb,4BAAKmB,GACL,2BAAIY,GACJ,2BAAIC,EAAJ,iBAAoBC,Q,oDCsEnBE,EA7EW,WAAO,IAAD,EAEQtC,mBAAS,IAFjB,mBAErBuC,EAFqB,KAETC,EAFS,OAGMxC,oBAAS,GAHf,mBAGrByC,EAHqB,KAGVC,EAHU,OAIE1C,oBAAS,GAJX,mBAIrB2C,EAJqB,KAIZC,EAJY,iDAkB5B,WAAgCC,GAAhC,yCAAAC,EAAA,sDACMC,EAAgB,GADtB,cAEsBF,GAFtB,gEAEaG,EAFb,QAGUC,EAAUD,EAAMtC,GAChBwC,EAAUF,EAAME,QAChBC,EAAYD,EAAQC,UAL9B,UAM2BC,IACAC,IADA,yEACsEF,EADtE,gBACuFG,4CAPlH,QAMUC,EANV,OAQUlB,EAAekB,EAASC,KAAKC,MAAM,GAAGP,QAAQQ,WAAWC,OAAOC,IAEhEtC,EAAQ4B,EAAQ5B,MAChBW,EAAQiB,EAAQQ,WAAWC,OAAOC,IAClCzB,EAAQa,EAAMa,WAAWC,UACzB1B,EAAY2B,WAASC,QAAQd,EAAQe,aAAaC,aAClDhC,EAAUgB,EAAQiB,aAExBpB,EAAcqB,KAAK,CACjBnB,UACAhB,QACAX,QACAY,UACAC,QACAC,YACAC,iBAvBN,+IA0BEG,EAAcO,GACdL,GAAa,GA3Bf,iEAlB4B,sBAgD5B,OA1CA2B,qBAAU,WACRjB,IACGC,IADH,oJACoJC,4CACjJgB,MAAK,SAAAf,IATkB,oCAUtBgB,CAAiBhB,EAASC,KAAKC,UAEhCe,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ7B,GAAW,QAEd,IAgCAD,EACM,kBAACiC,EAAA,EAAD,CAAOC,SAAS,QAAQ1E,UAAU,WAAlC,qBAIL,yBAAKA,UAAU,qBACTsC,EAAY,kBAACqC,EAAA,EAAD,CAAkB3E,UAAU,UAAU4E,MAAM,cAAiB,KAC3E,yBAAK5E,UAAU,6BAEToC,EAAWyC,KAAI,SAAAC,GACb,OACQ,kBAAC,IAAD,CAAMC,IAAKD,EAAKhC,QAAS7C,GAAE,iBAAY6E,EAAKhC,UAC1C,kBAAC,EAAD,CACE3B,MAAO2D,EAAK3D,MACZW,MAAOgD,EAAKhD,MACZE,MAAO8C,EAAK9C,MACZC,UAAW6C,EAAK7C,UAChBF,QAAS+C,EAAK/C,QACdG,aAAc4C,EAAK5C,sB,0BCvDpC8C,G,OAjBI,SAAC,GAAqD,IAApDlD,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,QAASkD,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,YACnD,OACI,yBAAKnF,UAAU,cACX,kBAACc,EAAA,EAAD,CACEd,UAAU,mBACVG,IAAK4B,EACL7B,IAAK4B,IAEP,yBAAK9B,UAAU,oBACb,4BAAK+B,GACL,2BAAIkD,EAAJ,uBAAyBC,EAAzB,WACA,2BAAIC,OCKHC,I,OAjBE,SAAC,GAA4D,IAA3DpD,EAA0D,EAA1DA,MAAOmD,EAAmD,EAAnDA,YAAalD,EAAsC,EAAtCA,UAAWF,EAA2B,EAA3BA,QAASZ,EAAkB,EAAlBA,MAAOW,EAAW,EAAXA,MAC9D,OACI,yBAAK9B,UAAU,YACb,yBAAKE,IAAK4B,EAAO3B,IAAI,KACrB,yBAAKH,UAAU,kBACX,4BAAKmB,GACL,uBAAGnB,UAAU,sBACV+B,EADH,WACeC,EADf,iBAC+BC,GAE/B,uBAAGjC,UAAU,yBACVmF,O,QC2HFE,GA3HI,SAACC,GAAW,IACrBC,EAAgBC,eAAhBD,YADoB,EAGU1F,mBAAS,IAHnB,mBAGnB4F,EAHmB,KAGPC,EAHO,OAIQ7F,mBAAS,IAJjB,mBAInB8F,EAJmB,KAIRC,EAJQ,OAKQ/F,oBAAS,GALjB,mBAKnByC,EALmB,KAKRC,EALQ,OAMI1C,oBAAS,GANb,mBAMnB2C,EANmB,KAMVC,EANU,iDAiC1B,WAAgCV,GAAhC,6BAAAY,EAAA,6DACQK,EAAYjB,EAAQxB,GAAGyC,UAD/B,SAEyBC,IACEC,IADF,4EAC2EF,EAD3E,gBAC4FG,4CAHrH,OAEQC,EAFR,OAIQ8B,EAAa9B,EAASC,KAAKC,MAAM,GAAGI,WAAWmC,WAC/CZ,EAAO7B,EAASC,KAAKC,MAAM,GAAGI,WAAWoC,gBACzC/C,EAAUhB,EAAQgB,QAClB5B,EAAQ4B,EAAQ5B,MAChBgE,EAAcpC,EAAQoC,YACtBrD,EAAQiB,EAAQQ,WAAWC,OAAOC,IACxCiC,EAAc,CACZ1C,YACAlB,QACAX,QACA8D,OACAC,aACAC,gBAhBJ,6CAjC0B,kEAqD1B,WAA+BY,GAA/B,uCAAApD,EAAA,sDACMqD,EAAe,GADrB,cAEsBD,GAFtB,gEAEalD,EAFb,QAGUC,EAAUD,EAAMtC,GAAGuC,QAH7B,SAI2BG,IACEC,IADF,uFACsFJ,EADtF,gBACqGK,4CALhI,OAIUC,EAJV,OAMUpB,EAAQoB,EAASC,KAAKC,MAAM,GAAGI,WAAWC,UAC1CZ,EAAUF,EAAME,QAChB5B,EAAQ4B,EAAQ5B,MAChBc,EAAY2B,WAASC,QAAQd,EAAQe,aAAaC,aAClDhC,EAAUgB,EAAQiB,aAClBmB,EAAcpC,EAAQoC,YACtBrD,EAAQiB,EAAQQ,WAAWC,OAAOC,IAExCuC,EAAa/B,KAAK,CAChBnB,UACA3B,QACAW,QACAE,QACAC,YACAF,UACAoD,gBArBN,+IAwBES,EAAaI,GACbzD,GAAa,GAzBf,iEArD0B,sBAgF1B,OAxEA2B,qBAAU,WACRwB,EAAc,IACdE,EAAa,IACb3C,IACGC,IADH,gGACgGqC,EADhG,gCACmIpC,4CAChIgB,MAAK,SAAAf,IAbgB,oCAcpB6C,CAAiB7C,EAASC,KAAT,MAAuB,OAI1CJ,IACCC,IADD,8FAC4FqC,EAD5F,gCAC+HpC,4CAC9HgB,MAAK,SAAAf,IApBgB,oCAqBpB8C,CAAgB9C,EAASC,KAAT,OAChBZ,GAAW,MAEZ4B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZ7B,GAAW,GACXF,GAAa,QAGhB,CAACgD,IAkDA/C,EACK,kBAACiC,EAAA,EAAD,CAAOC,SAAS,QAAQ1E,UAAU,WAAlC,qBAGL,yBAAKA,UAAU,cACX,yBAAKA,UAAU,sBACX,kBAAC,IAAD,MACA,uCAEFsC,EAAY,kBAACqC,EAAA,EAAD,CAAkB3E,UAAU,UAAU4E,MAAM,cAAiB,KAC3E,6BACGtC,EAOkB,KAPN,kBAAC,EAAD,CACOyC,IAAKU,EAAWzC,UAChBlB,MAAO2D,EAAW3D,MAClBC,QAAS0D,EAAWtE,MACpB8D,KAAMQ,EAAWR,KACjBC,WAAYO,EAAWP,WACvBC,YAAaM,EAAWN,cAG9C,6BAEEQ,EAAUd,KAAI,SAAAC,GACZ,OACQ,kBAAC,IAAD,CAAMC,IAAKD,EAAKhC,QAAS7C,GAAE,iBAAY6E,EAAKhC,UAC1C,kBAAC,GAAD,CACE3B,MAAO2D,EAAK3D,MACZW,MAAOgD,EAAKhD,MACZE,MAAO8C,EAAK9C,MACZC,UAAW6C,EAAK7C,UAChBF,QAAS+C,EAAK/C,QACdoD,YAAaL,EAAKK,oB,SC/G/BgB,GAVD,SAAC,GAAe,IAAdrD,EAAa,EAAbA,QACZ,OACI,6BACE,kBAAC,KAAD,CACEA,QAASA,M,4GC4CNsD,GAzCG,SAAC,GAA+G,IAA9GjF,EAA6G,EAA7GA,MAAOgE,EAAsG,EAAtGA,YAAakB,EAAyF,EAAzFA,cAAerC,EAA0E,EAA1EA,aAAc9B,EAA4D,EAA5DA,aAAcyB,EAA8C,EAA9CA,UAAW2C,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,aAActB,EAAU,EAAVA,KACnH,OACI,yBAAKjF,UAAU,aACX,yBAAKA,UAAU,uBACX,4BAAKmB,IAET,yBAAKnB,UAAU,oBACX,2BAAI2D,EAAJ,iBAAwB0C,GACxB,yBAAKrG,UAAU,oBACX,kBAAC,EAAD,CAAYkB,KAAMU,IAAaT,MAAOmF,IACtC,kBAAC,EAAD,CAAYpF,KAAMsF,KAAerF,MAAOoF,IACxC,kBAAC,EAAD,CAAYrF,KAAMuF,KAAWtF,MAAM,UACnC,kBAAC,EAAD,CAAYD,KAAMwF,KAAiBvF,MAAM,SACzC,kBAAC,EAAD,CAAYD,KAAMyF,KAAexF,MAAM,OAG/C,6BACA,yBAAKnB,UAAU,sBACX,6BACI,kBAACc,EAAA,EAAD,CACId,UAAU,oBACVG,IAAK6D,EACL9D,IAAKgC,IAET,yBAAKlC,UAAU,0BACX,wBAAIA,UAAU,2BAA2BgE,GACzC,uBAAGhE,UAAU,0BAA0BiF,EAAvC,kBAIR,yBAAKjF,UAAU,wBACX,kBAAC4G,GAAA,EAAD,CAAQhC,MAAM,aAAd,eAGR,yBAAK5E,UAAU,0BACX,2BAAImF,MCoDL0B,GAvFK,WAAO,IACjB/D,EAAY0C,eAAZ1C,QADgB,EAGYjD,mBAAS,IAHrB,mBAGfiH,EAHe,KAGJC,EAHI,OAIYlH,oBAAS,GAJrB,mBAIfyC,EAJe,KAIJC,EAJI,OAKQ1C,oBAAS,GALjB,mBAKf2C,EALe,KAKNC,EALM,iDAsBtB,WAAgCI,GAAhC,uCAAAF,EAAA,6DACUI,EAAUF,EAAME,QAChBiE,EAAQnE,EAAMa,WACdV,EAAYD,EAAQC,UAH9B,SAI2BC,IACAC,IADA,yFACsFF,EADtF,gBACuGG,4CALlI,OAIUC,EAJV,OAOUlB,EAAekB,EAASC,KAAKC,MAAM,GAAGP,QAAQQ,WAAWC,OAAOC,IAChEwB,EAAO7B,EAASC,KAAKC,MAAM,GAAGI,WAAWoC,gBACzCO,EAAgB,IAAIY,KAAKlE,EAAQe,aAAaoD,mBAAmB,QAAS,CACxBC,IAAM,UACNC,MAAQ,QACRC,KAAO,YAEzDlG,EAAQ4B,EAAQ5B,MAChBgE,EAAcpC,EAAQoC,YACtBnB,EAAejB,EAAQiB,aACvBL,EAAYqD,EAAMrD,UAClB2C,EAAYU,EAAMV,UAClBC,EAAeS,EAAMT,aAE3BQ,EAAa,CACT5F,QACAgE,cACAkB,gBACArC,eACA9B,eACAyB,YACA2C,YACAC,eACAtB,SAEJ1C,GAAa,GAhCjB,6CAtBsB,sBAwDtB,OAjDA2B,qBAAU,WACN6C,EAAa,IACbxE,GAAa,GACbU,IACGC,IADH,uFACuFJ,EADvF,gBACsGK,4CACnGgB,MAAK,SAAAf,IAZU,oCAaZkE,CAAgBlE,EAASC,KAAT,MAAuB,IACvCZ,GAAW,MAEd4B,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZ7B,GAAW,QAElB,CAACK,IAoCDN,EACQ,kBAACiC,EAAA,EAAD,CAAOC,SAAS,QAAQ1E,UAAU,WAAlC,qBAGP,yBAAKA,UAAU,eACX,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,sBACVsC,EAAY,kBAACqC,EAAA,EAAD,CAAkB3E,UAAU,UAAU4E,MAAM,cAAgB,kBAAC,GAAD,CAAO9B,QAASA,KAE7F,yBAAK9C,UAAU,0BACTsC,EAUiB,KAVL,kBAAC,GAAD,CACEnB,MAAO2F,EAAU/D,QACjBoC,YAAa2B,EAAU3B,YACvBkB,cAAeS,EAAUT,cACzBrC,aAAc8C,EAAU9C,aACxB9B,aAAc4E,EAAU5E,aACxByB,UAAWmD,EAAUnD,UACrB2C,UAAWQ,EAAUR,UACrBC,aAAcO,EAAUP,aACxBtB,KAAM6B,EAAU7B,SAKxC,yBAAKjF,UAAU,0BACX,kBAAC,EAAD,SChDDuH,OAlCf,WAEE,OACE,yBAAKvH,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC,EAAD,MACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOwH,KAAK,mBACV,yBAAKxH,UAAU,iBACb,kBAAC,GAAD,QAGJ,kBAAC,KAAD,CAAOwH,KAAK,wBACV,yBAAKxH,UAAU,iBACb,kBAAC,EAAD,MACA,kBAAC,GAAD,QAGJ,kBAAC,KAAD,CAAOwH,KAAK,KACV,yBAAKxH,UAAU,iBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,YClBMyH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAAAmE,GACJA,EAAaC,gBAEdlE,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMkE,a","file":"static/js/main.15dd8f79.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport TextField from '@material-ui/core/TextField';\n\n\n\nfunction Header () {\n\n    const [inputSearch, setInputSearch] = useState('');\n\n    return (\n        <div className='header'>\n          <div className=\"header__left\">\n            <MenuIcon />\n            <Link to='/'>\n               <img \n                className='header__logo'\n                src='youtube2.svg'\n                alt=''\n              />\n               \n               \n            </Link>\n          </div>\n          \n          <div className=\"header__center\">\n            {/* <input type='text' onChange={(e) => setInputSearch(e.target.value)} value={inputSearch}/> */}\n            <TextField style={{width:\"95%\"}} id=\"outlined-basic\" value={inputSearch} onChange={(e) => setInputSearch(e.target.value)} label=\"Rechercher\" variant=\"outlined\" />\n\n            <Link to={`/search/${inputSearch}`}>\n              <SearchIcon className='header__searchbutton'/>\n            </Link>\n            \n          </div>\n\n          <div className=\"header__right\">\n            <VideoCallIcon className='header__icon'/>\n            <AppsIcon className='header__icon'/>\n            <NotificationsIcon className='header__icon'/>\n            <Avatar\n              alt='Amaury le chaffotec'\n              stc='https://avatars.githubusercontent.com/u/111974984?v=4'\n            />\n          </div>\n          \n        </div>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport './SideBarRow.css';\n\n\nconst SideBarRow = ({selected, Icon, title}) => {\n    return (\n        <div className={`sidebarrow ${selected ? 'selected': ''}`}>\n            <Icon className='sidebarrow__icon'/>\n            <h2 className='sidebarrow__title'>{title}</h2>\n        </div>\n    )\n}\n\nexport default SideBarRow;\n","import React from 'react';\nimport SideBarRow from './../SideBarRow/SideBarRow';\nimport './SideBar.css';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\nimport HistoryIcon from '@material-ui/icons/History';\nimport OndemandVideoIcon from '@material-ui/icons/OndemandVideo';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\n\n\nconst SideBar = () => {\n    return (\n        <div className='sidebar'>\n            <SideBarRow selected Icon={HomeIcon} title='Home' />\n            <SideBarRow Icon={WhatshotIcon} title='Trending' />\n            <SideBarRow Icon={SubscriptionsIcon} title='Subscription' />\n            <hr />\n            <SideBarRow Icon={VideoLibraryIcon} title='Library' />\n            <SideBarRow Icon={HistoryIcon} title='History' />\n            <SideBarRow Icon={OndemandVideoIcon} title='Your videos' />\n            <SideBarRow Icon={WatchLaterIcon} title='Watch later' />\n            <SideBarRow Icon={ThumbUpIcon} title='Liked vides' />\n            <hr />\n        </div>\n    )\n}\n\nexport default SideBar;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport './VideoCard.css';\n\nconst VideoCard = ({image, title, channel, views, timestamp, channelImage}) => {\n    return (\n        <div className='videocard'>\n          <img className='videocard__image' src={image} alt='' />\n          <div className=\"videocard__info\">\n            <Avatar \n              className='videocard__avatar' \n              alt={channel} \n              src={channelImage} \n            />\n            <div className=\"videocard__text\">\n              <h4>{title}</h4>\n              <p>{channel}</p>\n              <p>{views} views • {timestamp}</p>\n            </div> \n          </div>\n        </div>\n    )\n}\n\nexport default VideoCard;\n","import React, {useEffect, useState} from 'react';\nimport VideoCard from './../VideoCard/VideoCard';\nimport './RecommendedVideos.css';\nimport axios from 'axios';\nimport {DateTime} from 'luxon';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst RecommendedVideos = () => {\n\n    const [videoCards, setVideoCards] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n      axios\n        .get(`https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=15&regionCode=FR&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        .then(response => {\n          createVideoCards(response.data.items);\n        })\n        .catch(error => {\n          console.log(error);\n          setIsError(true);\n        })\n    }, [])\n\n    async function createVideoCards(videoItems) {\n      let newVideoCards = [];\n      for (const video of videoItems) {\n        const videoId = video.id;\n        const snippet = video.snippet;\n        const channelId = snippet.channelId;\n        const response = await axios\n                              .get(`https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\n\n        const title = snippet.title;\n        const image = snippet.thumbnails.medium.url;\n        const views = video.statistics.viewCount;\n        const timestamp = DateTime.fromISO(snippet.publishedAt).toRelative();\n        const channel = snippet.channelTitle;\n\n        newVideoCards.push({\n          videoId,\n          image,\n          title,\n          channel,\n          views,\n          timestamp,\n          channelImage\n        });\n      };\n      setVideoCards(newVideoCards);\n      setIsLoading(false);\n    }\n\n    if(isError) {\n      return <Alert severity=\"error\" className='loading'>No Results found!</Alert>\n    }\n    return (\n        \n        <div className='recommendedvideos'>\n            { isLoading ? <CircularProgress className='loading' color='secondary' /> : null }\n            <div className=\"recommendedvideos__videos\">\n                {\n                  videoCards.map(item => {\n                    return (\n                            <Link key={item.videoId} to={`/video/${item.videoId}`}>\n                              <VideoCard \n                                title={item.title}\n                                image={item.image}\n                                views={item.views}\n                                timestamp={item.timestamp}\n                                channel={item.channel}\n                                channelImage={item.channelImage}\n                              />\n                            </Link>\n                    )\n                  })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default RecommendedVideos;\n","import React from 'react';\nimport './ChannelRow.css';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst ChannelRow = ({image, channel, subs, noOfVideos, description}) => {\n    return (\n        <div className='channelrow'>\n            <Avatar \n              className='channelrow__logo'\n              alt={channel}\n              src={image}\n            />\n            <div className=\"channelrow__text\">\n              <h4>{channel}</h4>\n              <p>{subs} subscribers • {noOfVideos} videos</p>\n              <p>{description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ChannelRow;\n","import React from 'react';\nimport './VideoRow.css';\n\nconst VideoRow = ({views, description, timestamp, channel, title, image}) => {\n    return (\n        <div className='videorow'>\n          <img src={image} alt=\"\" />\n          <div className=\"videorow__text\">\n              <h3>{title}</h3>\n              <p className='videorow__headline'>\n                {channel} • {views} views • {timestamp}\n              </p>\n              <p className='videorow__description'>\n                {description}\n              </p>\n          </div>\n        </div>\n    )\n}\n\nexport default VideoRow;\n","import React, {useState, useEffect} from 'react';\nimport \"./SearchPage.css\";\nimport TuneIcon from '@material-ui/icons/Tune';\nimport ChannelRow from './../ChannelRow/ChannelRow';\nimport VideoRow from './../VideoRow/VideoRow';\nimport {useParams} from 'react-router';\nimport axios from 'axios';\nimport {DateTime} from 'luxon';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst SearchPage = (props) => {\n    let { searchQuery } = useParams();\n    \n    const [channelRow, setChannelRow] = useState('');\n    const [videoRows, setVideoRows] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n      setChannelRow('');\n      setVideoRows([]);\n      axios\n        .get(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&type=channel&q=${searchQuery}&safeSearch=none&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        .then(response => {\n          createChannelRow(response.data['items'][0]);\n        })\n        \n\n        axios\n        .get(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=9&type=video&q=${searchQuery}&safeSearch=none&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        .then(response => {\n          createVideoRows(response.data['items']);\n          setIsError(false);\n        })\n        .catch(error => {\n          console.log(error);\n          setIsError(true);\n          setIsLoading(false);\n        })\n\n    }, [searchQuery])\n\n\n    async function createChannelRow(channel) {\n      const channelId = channel.id.channelId;\n      const response = await axios\n                              .get(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n      const noOfVideos = response.data.items[0].statistics.videoCount;\n      const subs = response.data.items[0].statistics.subscriberCount;\n      const snippet = channel.snippet;\n      const title = snippet.title;\n      const description = snippet.description;\n      const image = snippet.thumbnails.medium.url;\n      setChannelRow({\n        channelId,\n        image,\n        title,\n        subs,\n        noOfVideos,\n        description\n      });\n    }\n\n    async function createVideoRows(videos) {\n      let newVideoRows = [];\n      for (const video of videos) {\n        const videoId = video.id.videoId;\n        const response = await axios\n                                .get(`https://www.googleapis.com/youtube/v3/videos?part=statistics%2C%20snippet&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        const views = response.data.items[0].statistics.viewCount;\n        const snippet = video.snippet;\n        const title = snippet.title;\n        const timestamp = DateTime.fromISO(snippet.publishedAt).toRelative();\n        const channel = snippet.channelTitle;\n        const description = snippet.description;\n        const image = snippet.thumbnails.medium.url;\n                            \n        newVideoRows.push({\n          videoId,\n          title,\n          image,\n          views,\n          timestamp,\n          channel, \n          description\n        });\n      };\n      setVideoRows(newVideoRows);\n      setIsLoading(false);\n    }\n    if (isError) {\n      return <Alert severity=\"error\" className='loading'>No Results found!</Alert>\n    }\n    return (\n        <div className=\"searchpage\">\n            <div className=\"searchpage__filter\">\n                <TuneIcon />\n                <h2>Filter</h2>\n            </div>\n            { isLoading ? <CircularProgress className='loading' color='secondary' /> : null }\n            <hr />\n            { !isLoading ? <ChannelRow \n                                  key={channelRow.channelId}\n                                  image={channelRow.image}\n                                  channel={channelRow.title}\n                                  subs={channelRow.subs}\n                                  noOfVideos={channelRow.noOfVideos}\n                                  description={channelRow.description}\n                            /> : null\n            }\n            <hr />\n            {\n              videoRows.map(item => {\n                return (\n                        <Link key={item.videoId} to={`/video/${item.videoId}`}>\n                          <VideoRow\n                            title={item.title}\n                            image={item.image}\n                            views={item.views}\n                            timestamp={item.timestamp}\n                            channel={item.channel}\n                            description={item.description}\n                          />\n                        </Link>\n                )\n              })\n              \n            }   \n            \n        </div>\n    )\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport YouTube from 'react-youtube';\n\nconst Video = ({videoId}) => {\n    return (\n        <div>\n          <YouTube\n            videoId={videoId}\n          />\n        </div>\n    )\n}\n\nexport default Video;\n","import React from 'react';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport SideBarRow from '../SideBarRow/SideBarRow';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport './VideoInfo.css';\nimport { Avatar, Button } from '@material-ui/core';\n\nconst VideoInfo = ({title, description, publishedDate, channelTitle, channelImage, viewCount, likeCount, dislikeCount, subs}) => {\n    return (\n        <div className='videoinfo'>\n            <div className='videoinfo__headline'>\n                <h1>{title}</h1>\n            </div>\n            <div className='videoinfo__stats'>\n                <p>{viewCount} views • {publishedDate}</p>\n                <div className=\"videoinfo__likes\">\n                    <SideBarRow Icon={ThumbUpIcon} title={likeCount} />\n                    <SideBarRow Icon={ThumbDownIcon} title={dislikeCount} />\n                    <SideBarRow Icon={ReplyIcon} title='SHARE' />\n                    <SideBarRow Icon={PlaylistAddIcon} title='SAVE' />\n                    <SideBarRow Icon={MoreHorizIcon} title='' />\n                </div>\n            </div>\n            <hr />\n            <div className=\"videoinfo__channel\">\n                <div>\n                    <Avatar \n                        className='videoinfo__avatar' \n                        alt={channelTitle} \n                        src={channelImage} \n                    />\n                    <div className='videoinfo__channelinfo'>\n                        <h3 className='videoinfo__channeltitle'>{channelTitle}</h3>\n                        <p className='videoinfo__channelsubs'>{subs} subscribers</p>\n                    </div>\n                    \n                </div>\n                <div className='videoinfo__subscribe'>\n                    <Button color='secondary' >SUBSCRIBE</Button>\n                </div>\n            </div>\n            <div className='videoinfo__channeldesc'>\n                <p>{description}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default VideoInfo;\n","import React, { useState, useEffect } from 'react';\nimport {useParams} from 'react-router';\nimport Video from './../Video/Video'\nimport './VideoPlayer.css';\nimport RecommendedVideos from '../RecommendedVideos/RecommendedVideos';\nimport VideoInfo from '../VideoInfo/VideoInfo';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\nconst VideoPlayer = () => {\n    let { videoId } = useParams();\n\n    const [videoInfo, setVideoInfo] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        setVideoInfo([]);\n        setIsLoading(true);\n        axios\n          .get(`https://www.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n          .then(response => {\n              createVideoInfo(response.data['items'][0]);\n              setIsError(false);\n          })\n          .catch(error => {\n              console.log(error);\n              setIsError(true);\n          })\n    }, [videoId])\n\n    async function createVideoInfo (video) {\n        const snippet = video.snippet;\n        const stats = video.statistics;\n        const channelId = snippet.channelId;\n        const response = await axios\n                              .get(`https://www.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        \n        const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\n        const subs = response.data.items[0].statistics.subscriberCount;\n        const publishedDate = new Date(snippet.publishedAt).toLocaleDateString('en-GB', {  \n                                                                day : 'numeric',\n                                                                month : 'short',\n                                                                year : 'numeric'\n                                                            });\n        const title = snippet.title;\n        const description = snippet.description;\n        const channelTitle = snippet.channelTitle;\n        const viewCount = stats.viewCount;\n        const likeCount = stats.likeCount;\n        const dislikeCount = stats.dislikeCount;\n\n        setVideoInfo({\n            title,\n            description,\n            publishedDate,\n            channelTitle,\n            channelImage,\n            viewCount,\n            likeCount,\n            dislikeCount,\n            subs\n        });\n        setIsLoading(false);\n    }\n    if(isError) {\n        return <Alert severity=\"error\" className='loading'>No Results found!</Alert>\n    }\n    return (\n        <div className='videoplayer'>\n            <div className='videoplayer__videodetails'>\n                <div className='videoplayer__video'>\n                    {isLoading ? <CircularProgress className='loading' color='secondary'/> : <Video videoId={videoId} /> }\n                </div>\n                <div className='videoplayer__videoinfo'>\n                    {!isLoading ? <VideoInfo\n                                    title={videoInfo.snippet}\n                                    description={videoInfo.description}\n                                    publishedDate={videoInfo.publishedDate}\n                                    channelTitle={videoInfo.channelTitle}\n                                    channelImage={videoInfo.channelImage}\n                                    viewCount={videoInfo.viewCount}\n                                    likeCount={videoInfo.likeCount}\n                                    dislikeCount={videoInfo.dislikeCount}\n                                    subs={videoInfo.subs}\n                                  /> : null\n                    }\n                </div>\n            </div>\n            <div className='videoplayer__suggested'>\n                <RecommendedVideos />\n            </div>\n        </div>\n    )\n}\n\nexport default VideoPlayer;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport SideBar from './components/SideBar/SideBar';\nimport RecommendedVideos from './components/RecommendedVideos/RecommendedVideos';\nimport SearchPage from './components/SearchPage/SearchPage';\nimport VideoPlayer from './components/VideoPlayer/VideoPlayer';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n      <Header />\n        <Switch>\n          <Route path='/video/:videoId'>\n            <div className=\"app__mainpage\">\n              <VideoPlayer />\n            </div>\n          </Route>\n          <Route path='/search/:searchQuery'>\n            <div className=\"app__mainpage\">\n              <SideBar />\n              <SearchPage />\n            </div>\n          </Route>\n          <Route path='/'>\n            <div className=\"app__mainpage\">\n              <SideBar />\n              <RecommendedVideos />\n            </div>\n          </Route>\n          \n        </Switch>\n      </Router>\n\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}