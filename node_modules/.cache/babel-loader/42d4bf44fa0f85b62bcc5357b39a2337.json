{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"./SearchPage.css\";import TuneIcon from'@material-ui/icons/Tune';import ChannelRow from'./../ChannelRow/ChannelRow';import VideoRow from'./../VideoRow/VideoRow';import{useParams}from'react-router';import axios from'axios';import{DateTime}from'luxon';import{Link}from'react-router-dom';import CircularProgress from'@material-ui/core/CircularProgress';import Alert from'@material-ui/lab/Alert';var SearchPage=function SearchPage(props){var _useParams=useParams(),searchQuery=_useParams.searchQuery;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),channelRow=_useState2[0],setChannelRow=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),videoRows=_useState4[0],setVideoRows=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isError=_useState8[0],setIsError=_useState8[1];useEffect(function(){setChannelRow('');setVideoRows([]);axios.get(\"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&type=channel&q=\".concat(searchQuery,\"&safeSearch=none&key=\").concat(process.env.REACT_APP_YOUTUBE_API_KEY)).then(function(response){createChannelRow(response.data['items'][0]);});axios.get(\"https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=9&type=video&q=\".concat(searchQuery,\"&safeSearch=none&key=\").concat(process.env.REACT_APP_YOUTUBE_API_KEY)).then(function(response){createVideoRows(response.data['items']);setIsError(false);}).catch(function(error){console.log(error);setIsError(true);setIsLoading(false);});},[searchQuery]);function createChannelRow(_x){return _createChannelRow.apply(this,arguments);}function _createChannelRow(){_createChannelRow=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(channel){var channelId,response,noOfVideos,subs,snippet,title,description,image;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:channelId=channel.id.channelId;_context.next=3;return axios.get(\"https://www.googleapis.com/youtube/v3/channels?part=statistics&id=\".concat(channelId,\"&key=\").concat(process.env.REACT_APP_YOUTUBE_API_KEY));case 3:response=_context.sent;noOfVideos=response.data.items[0].statistics.videoCount;subs=response.data.items[0].statistics.subscriberCount;snippet=channel.snippet;title=snippet.title;description=snippet.description;image=snippet.thumbnails.medium.url;setChannelRow({channelId:channelId,image:image,title:title,subs:subs,noOfVideos:noOfVideos,description:description});case 11:case\"end\":return _context.stop();}}},_callee);}));return _createChannelRow.apply(this,arguments);}function createVideoRows(_x2){return _createVideoRows.apply(this,arguments);}function _createVideoRows(){_createVideoRows=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(videos){var newVideoRows,_iterator,_step,video,videoId,response,views,snippet,title,timestamp,channel,description,image;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:newVideoRows=[];_iterator=_createForOfIteratorHelper(videos);_context2.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context2.next=20;break;}video=_step.value;videoId=video.id.videoId;_context2.next=9;return axios.get(\"https://www.googleapis.com/youtube/v3/videos?part=statistics%2C%20snippet&id=\".concat(videoId,\"&key=\").concat(process.env.REACT_APP_YOUTUBE_API_KEY));case 9:response=_context2.sent;views=response.data.items[0].statistics.viewCount;snippet=video.snippet;title=snippet.title;timestamp=DateTime.fromISO(snippet.publishedAt).toRelative();channel=snippet.channelTitle;description=snippet.description;image=snippet.thumbnails.medium.url;newVideoRows.push({videoId:videoId,title:title,image:image,views:views,timestamp:timestamp,channel:channel,description:description});case 18:_context2.next=4;break;case 20:_context2.next=25;break;case 22:_context2.prev=22;_context2.t0=_context2[\"catch\"](2);_iterator.e(_context2.t0);case 25:_context2.prev=25;_iterator.f();return _context2.finish(25);case 28:;setVideoRows(newVideoRows);setIsLoading(false);case 31:case\"end\":return _context2.stop();}}},_callee2,null,[[2,22,25,28]]);}));return _createVideoRows.apply(this,arguments);}if(isError){return/*#__PURE__*/React.createElement(Alert,{severity:\"error\",className:\"loading\"},\"No Results found!\");}return/*#__PURE__*/React.createElement(\"div\",{className:\"searchpage\"},/*#__PURE__*/React.createElement(\"div\",{className:\"searchpage__filter\"},/*#__PURE__*/React.createElement(TuneIcon,null),/*#__PURE__*/React.createElement(\"h2\",null,\"Filter\")),isLoading?/*#__PURE__*/React.createElement(CircularProgress,{className:\"loading\",color:\"secondary\"}):null,/*#__PURE__*/React.createElement(\"hr\",null),!isLoading?/*#__PURE__*/React.createElement(ChannelRow,{key:channelRow.channelId,image:channelRow.image,channel:channelRow.title,subs:channelRow.subs,noOfVideos:channelRow.noOfVideos,description:channelRow.description}):null,/*#__PURE__*/React.createElement(\"hr\",null),videoRows.map(function(item){return/*#__PURE__*/React.createElement(Link,{key:item.videoId,to:\"/video/\".concat(item.videoId)},/*#__PURE__*/React.createElement(VideoRow,{title:item.title,image:item.image,views:item.views,timestamp:item.timestamp,channel:item.channel,description:item.description}));}));};export default SearchPage;","map":{"version":3,"sources":["/home/amaury/dev_experimentation/youtube-clone/src/components/SearchPage/SearchPage.js"],"names":["React","useState","useEffect","TuneIcon","ChannelRow","VideoRow","useParams","axios","DateTime","Link","CircularProgress","Alert","SearchPage","props","searchQuery","channelRow","setChannelRow","videoRows","setVideoRows","isLoading","setIsLoading","isError","setIsError","get","process","env","REACT_APP_YOUTUBE_API_KEY","then","response","createChannelRow","data","createVideoRows","catch","error","console","log","channel","channelId","id","noOfVideos","items","statistics","videoCount","subs","subscriberCount","snippet","title","description","image","thumbnails","medium","url","videos","newVideoRows","video","videoId","views","viewCount","timestamp","fromISO","publishedAt","toRelative","channelTitle","push","map","item"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport \"./SearchPage.css\";\nimport TuneIcon from '@material-ui/icons/Tune';\nimport ChannelRow from './../ChannelRow/ChannelRow';\nimport VideoRow from './../VideoRow/VideoRow';\nimport {useParams} from 'react-router';\nimport axios from 'axios';\nimport {DateTime} from 'luxon';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst SearchPage = (props) => {\n    let { searchQuery } = useParams();\n    \n    const [channelRow, setChannelRow] = useState('');\n    const [videoRows, setVideoRows] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n      setChannelRow('');\n      setVideoRows([]);\n      axios\n        .get(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=1&type=channel&q=${searchQuery}&safeSearch=none&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        .then(response => {\n          createChannelRow(response.data['items'][0]);\n        })\n        \n\n        axios\n        .get(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=9&type=video&q=${searchQuery}&safeSearch=none&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        .then(response => {\n          createVideoRows(response.data['items']);\n          setIsError(false);\n        })\n        .catch(error => {\n          console.log(error);\n          setIsError(true);\n          setIsLoading(false);\n        })\n\n    }, [searchQuery])\n\n\n    async function createChannelRow(channel) {\n      const channelId = channel.id.channelId;\n      const response = await axios\n                              .get(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n      const noOfVideos = response.data.items[0].statistics.videoCount;\n      const subs = response.data.items[0].statistics.subscriberCount;\n      const snippet = channel.snippet;\n      const title = snippet.title;\n      const description = snippet.description;\n      const image = snippet.thumbnails.medium.url;\n      setChannelRow({\n        channelId,\n        image,\n        title,\n        subs,\n        noOfVideos,\n        description\n      });\n    }\n\n    async function createVideoRows(videos) {\n      let newVideoRows = [];\n      for (const video of videos) {\n        const videoId = video.id.videoId;\n        const response = await axios\n                                .get(`https://www.googleapis.com/youtube/v3/videos?part=statistics%2C%20snippet&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        const views = response.data.items[0].statistics.viewCount;\n        const snippet = video.snippet;\n        const title = snippet.title;\n        const timestamp = DateTime.fromISO(snippet.publishedAt).toRelative();\n        const channel = snippet.channelTitle;\n        const description = snippet.description;\n        const image = snippet.thumbnails.medium.url;\n                            \n        newVideoRows.push({\n          videoId,\n          title,\n          image,\n          views,\n          timestamp,\n          channel, \n          description\n        });\n      };\n      setVideoRows(newVideoRows);\n      setIsLoading(false);\n    }\n    if (isError) {\n      return <Alert severity=\"error\" className='loading'>No Results found!</Alert>\n    }\n    return (\n        <div className=\"searchpage\">\n            <div className=\"searchpage__filter\">\n                <TuneIcon />\n                <h2>Filter</h2>\n            </div>\n            { isLoading ? <CircularProgress className='loading' color='secondary' /> : null }\n            <hr />\n            { !isLoading ? <ChannelRow \n                                  key={channelRow.channelId}\n                                  image={channelRow.image}\n                                  channel={channelRow.title}\n                                  subs={channelRow.subs}\n                                  noOfVideos={channelRow.noOfVideos}\n                                  description={channelRow.description}\n                            /> : null\n            }\n            <hr />\n            {\n              videoRows.map(item => {\n                return (\n                        <Link key={item.videoId} to={`/video/${item.videoId}`}>\n                          <VideoRow\n                            title={item.title}\n                            image={item.image}\n                            views={item.views}\n                            timestamp={item.timestamp}\n                            channel={item.channel}\n                            description={item.description}\n                          />\n                        </Link>\n                )\n              })\n              \n            }   \n            \n        </div>\n    )\n}\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}