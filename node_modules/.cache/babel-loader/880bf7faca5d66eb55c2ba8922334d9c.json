{"ast":null,"code":"import _regeneratorRuntime from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams}from'react-router';import Video from'./../Video/Video';import'./VideoPlayer.css';import RecommendedVideos from'../RecommendedVideos/RecommendedVideos';import VideoInfo from'../VideoInfo/VideoInfo';import axios from'axios';import CircularProgress from'@material-ui/core/CircularProgress';import Alert from'@material-ui/lab/Alert';var VideoPlayer=function VideoPlayer(){var _useParams=useParams(),videoId=_useParams.videoId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),videoInfo=_useState2[0],setVideoInfo=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isError=_useState6[0],setIsError=_useState6[1];useEffect(function(){setVideoInfo([]);setIsLoading(true);axios.get(\"https://www.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=\".concat(videoId,\"&key=\").concat(process.env.REACT_APP_YOUTUBE_API_KEY)).then(function(response){createVideoInfo(response.data['items'][0]);setIsError(false);}).catch(function(error){console.log(error);setIsError(true);});},[videoId]);function createVideoInfo(_x){return _createVideoInfo.apply(this,arguments);}function _createVideoInfo(){_createVideoInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(video){var snippet,stats,channelId,response,channelImage,subs,publishedDate,title,description,channelTitle,viewCount,likeCount,dislikeCount;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:snippet=video.snippet;stats=video.statistics;channelId=snippet.channelId;_context.next=5;return axios.get(\"https://www.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=\".concat(channelId,\"&key=\").concat(process.env.REACT_APP_YOUTUBE_API_KEY));case 5:response=_context.sent;channelImage=response.data.items[0].snippet.thumbnails.medium.url;subs=response.data.items[0].statistics.subscriberCount;publishedDate=new Date(snippet.publishedAt).toLocaleDateString('en-GB',{day:'numeric',month:'short',year:'numeric'});title=snippet.title;description=snippet.description;channelTitle=snippet.channelTitle;viewCount=stats.viewCount;likeCount=stats.likeCount;dislikeCount=stats.dislikeCount;setVideoInfo({title:title,description:description,publishedDate:publishedDate,channelTitle:channelTitle,channelImage:channelImage,viewCount:viewCount,likeCount:likeCount,dislikeCount:dislikeCount,subs:subs});setIsLoading(false);case 17:case\"end\":return _context.stop();}}},_callee);}));return _createVideoInfo.apply(this,arguments);}if(isError){return/*#__PURE__*/React.createElement(Alert,{severity:\"error\",className:\"loading\"},\"No Results found!\");}return/*#__PURE__*/React.createElement(\"div\",{className:\"videoplayer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"videoplayer__videodetails\"},/*#__PURE__*/React.createElement(\"div\",{className:\"videoplayer__video\"},isLoading?/*#__PURE__*/React.createElement(CircularProgress,{className:\"loading\",color:\"secondary\"}):/*#__PURE__*/React.createElement(Video,{videoId:videoId})),/*#__PURE__*/React.createElement(\"div\",{className:\"videoplayer__videoinfo\"},!isLoading?/*#__PURE__*/React.createElement(VideoInfo,{title:videoInfo.snippet,description:videoInfo.description,publishedDate:videoInfo.publishedDate,channelTitle:videoInfo.channelTitle,channelImage:videoInfo.channelImage,viewCount:videoInfo.viewCount,likeCount:videoInfo.likeCount,dislikeCount:videoInfo.dislikeCount,subs:videoInfo.subs}):null)),/*#__PURE__*/React.createElement(\"div\",{className:\"videoplayer__suggested\"},/*#__PURE__*/React.createElement(RecommendedVideos,null)));};export default VideoPlayer;","map":{"version":3,"sources":["/home/amaury/dev_experimentation/youtube-clone/src/components/VideoPlayer/VideoPlayer.js"],"names":["React","useState","useEffect","useParams","Video","RecommendedVideos","VideoInfo","axios","CircularProgress","Alert","VideoPlayer","videoId","videoInfo","setVideoInfo","isLoading","setIsLoading","isError","setIsError","get","process","env","REACT_APP_YOUTUBE_API_KEY","then","response","createVideoInfo","data","catch","error","console","log","video","snippet","stats","statistics","channelId","channelImage","items","thumbnails","medium","url","subs","subscriberCount","publishedDate","Date","publishedAt","toLocaleDateString","day","month","year","title","description","channelTitle","viewCount","likeCount","dislikeCount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useParams} from 'react-router';\nimport Video from './../Video/Video'\nimport './VideoPlayer.css';\nimport RecommendedVideos from '../RecommendedVideos/RecommendedVideos';\nimport VideoInfo from '../VideoInfo/VideoInfo';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\nconst VideoPlayer = () => {\n    let { videoId } = useParams();\n\n    const [videoInfo, setVideoInfo] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        setVideoInfo([]);\n        setIsLoading(true);\n        axios\n          .get(`https://www.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n          .then(response => {\n              createVideoInfo(response.data['items'][0]);\n              setIsError(false);\n          })\n          .catch(error => {\n              console.log(error);\n              setIsError(true);\n          })\n    }, [videoId])\n\n    async function createVideoInfo (video) {\n        const snippet = video.snippet;\n        const stats = video.statistics;\n        const channelId = snippet.channelId;\n        const response = await axios\n                              .get(`https://www.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        \n        const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\n        const subs = response.data.items[0].statistics.subscriberCount;\n        const publishedDate = new Date(snippet.publishedAt).toLocaleDateString('en-GB', {  \n                                                                day : 'numeric',\n                                                                month : 'short',\n                                                                year : 'numeric'\n                                                            });\n        const title = snippet.title;\n        const description = snippet.description;\n        const channelTitle = snippet.channelTitle;\n        const viewCount = stats.viewCount;\n        const likeCount = stats.likeCount;\n        const dislikeCount = stats.dislikeCount;\n\n        setVideoInfo({\n            title,\n            description,\n            publishedDate,\n            channelTitle,\n            channelImage,\n            viewCount,\n            likeCount,\n            dislikeCount,\n            subs\n        });\n        setIsLoading(false);\n    }\n    if(isError) {\n        return <Alert severity=\"error\" className='loading'>No Results found!</Alert>\n    }\n    return (\n        <div className='videoplayer'>\n            <div className='videoplayer__videodetails'>\n                <div className='videoplayer__video'>\n                    {isLoading ? <CircularProgress className='loading' color='secondary'/> : <Video videoId={videoId} /> }\n                </div>\n                <div className='videoplayer__videoinfo'>\n                    {!isLoading ? <VideoInfo\n                                    title={videoInfo.snippet}\n                                    description={videoInfo.description}\n                                    publishedDate={videoInfo.publishedDate}\n                                    channelTitle={videoInfo.channelTitle}\n                                    channelImage={videoInfo.channelImage}\n                                    viewCount={videoInfo.viewCount}\n                                    likeCount={videoInfo.likeCount}\n                                    dislikeCount={videoInfo.dislikeCount}\n                                    subs={videoInfo.subs}\n                                  /> : null\n                    }\n                </div>\n            </div>\n            <div className='videoplayer__suggested'>\n                <RecommendedVideos />\n            </div>\n        </div>\n    )\n}\n\nexport default VideoPlayer;\n"]},"metadata":{},"sourceType":"module"}