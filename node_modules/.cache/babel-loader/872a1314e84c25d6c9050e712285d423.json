{"ast":null,"code":"import _regeneratorRuntime from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/amaury/dev_experimentation/youtube-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import VideoCard from'./../VideoCard/VideoCard';import'./RecommendedVideos.css';import axios from'axios';import{DateTime}from'luxon';import{Link}from'react-router-dom';import CircularProgress from'@material-ui/core/CircularProgress';import Alert from'@material-ui/lab/Alert';var RecommendedVideos=function RecommendedVideos(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),videoCards=_useState2[0],setVideoCards=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isError=_useState6[0],setIsError=_useState6[1];useEffect(function(){axios.get(\"https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=15&regionCode=FR&key=\".concat(process.env.REACT_APP_YOUTUBE_API_KEY)).then(function(response){createVideoCards(response.data.items);}).catch(function(error){console.log(error);setIsError(true);});},[]);function createVideoCards(_x){return _createVideoCards.apply(this,arguments);}function _createVideoCards(){_createVideoCards=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(videoItems){var newVideoCards,_iterator,_step,video,videoId,snippet,channelId,response,channelImage,title,image,views,timestamp,channel;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newVideoCards=[];_iterator=_createForOfIteratorHelper(videoItems);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=21;break;}video=_step.value;videoId=video.id;snippet=video.snippet;channelId=snippet.channelId;_context.next=11;return axios.get(\"https://www.googleapis.com/youtube/v3/channels?part=snippet&id=\".concat(channelId,\"&key=\").concat(process.env.REACT_APP_YOUTUBE_API_KEY));case 11:response=_context.sent;channelImage=response.data.items[0].snippet.thumbnails.medium.url;title=snippet.title;image=snippet.thumbnails.medium.url;views=video.statistics.viewCount;timestamp=DateTime.fromISO(snippet.publishedAt).toRelative();channel=snippet.channelTitle;newVideoCards.push({videoId:videoId,image:image,title:title,channel:channel,views:views,timestamp:timestamp,channelImage:channelImage});case 19:_context.next=4;break;case 21:_context.next=26;break;case 23:_context.prev=23;_context.t0=_context[\"catch\"](2);_iterator.e(_context.t0);case 26:_context.prev=26;_iterator.f();return _context.finish(26);case 29:;setVideoCards(newVideoCards);setIsLoading(false);case 32:case\"end\":return _context.stop();}}},_callee,null,[[2,23,26,29]]);}));return _createVideoCards.apply(this,arguments);}if(isError){return/*#__PURE__*/React.createElement(Alert,{severity:\"error\",className:\"loading\"},\"No Results found!\");}return/*#__PURE__*/React.createElement(\"div\",{className:\"recommendedvideos\"},isLoading?/*#__PURE__*/React.createElement(CircularProgress,{className:\"loading\",color:\"secondary\"}):null,/*#__PURE__*/React.createElement(\"div\",{className:\"recommendedvideos__videos\"},videoCards.map(function(item){return/*#__PURE__*/React.createElement(Link,{key:item.videoId,to:\"/video/\".concat(item.videoId)},/*#__PURE__*/React.createElement(VideoCard,{title:item.title,image:item.image,views:item.views,timestamp:item.timestamp,channel:item.channel,channelImage:item.channelImage}));})));};export default RecommendedVideos;","map":{"version":3,"sources":["/home/amaury/dev_experimentation/youtube-clone/src/components/RecommendedVideos/RecommendedVideos.js"],"names":["React","useEffect","useState","VideoCard","axios","DateTime","Link","CircularProgress","Alert","RecommendedVideos","videoCards","setVideoCards","isLoading","setIsLoading","isError","setIsError","get","process","env","REACT_APP_YOUTUBE_API_KEY","then","response","createVideoCards","data","items","catch","error","console","log","videoItems","newVideoCards","video","videoId","id","snippet","channelId","channelImage","thumbnails","medium","url","title","image","views","statistics","viewCount","timestamp","fromISO","publishedAt","toRelative","channel","channelTitle","push","map","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport VideoCard from './../VideoCard/VideoCard';\nimport './RecommendedVideos.css';\nimport axios from 'axios';\nimport {DateTime} from 'luxon';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst RecommendedVideos = () => {\n\n    const [videoCards, setVideoCards] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n      axios\n        .get(`https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=15&regionCode=FR&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        .then(response => {\n          createVideoCards(response.data.items);\n        })\n        .catch(error => {\n          console.log(error);\n          setIsError(true);\n        })\n    }, [])\n\n    async function createVideoCards(videoItems) {\n      let newVideoCards = [];\n      for (const video of videoItems) {\n        const videoId = video.id;\n        const snippet = video.snippet;\n        const channelId = snippet.channelId;\n        const response = await axios\n                              .get(`https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`)\n        const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\n\n        const title = snippet.title;\n        const image = snippet.thumbnails.medium.url;\n        const views = video.statistics.viewCount;\n        const timestamp = DateTime.fromISO(snippet.publishedAt).toRelative();\n        const channel = snippet.channelTitle;\n\n        newVideoCards.push({\n          videoId,\n          image,\n          title,\n          channel,\n          views,\n          timestamp,\n          channelImage\n        });\n      };\n      setVideoCards(newVideoCards);\n      setIsLoading(false);\n    }\n\n    if(isError) {\n      return <Alert severity=\"error\" className='loading'>No Results found!</Alert>\n    }\n    return (\n        \n        <div className='recommendedvideos'>\n            { isLoading ? <CircularProgress className='loading' color='secondary' /> : null }\n            <div className=\"recommendedvideos__videos\">\n                {\n                  videoCards.map(item => {\n                    return (\n                            <Link key={item.videoId} to={`/video/${item.videoId}`}>\n                              <VideoCard \n                                title={item.title}\n                                image={item.image}\n                                views={item.views}\n                                timestamp={item.timestamp}\n                                channel={item.channel}\n                                channelImage={item.channelImage}\n                              />\n                            </Link>\n                    )\n                  })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default RecommendedVideos;\n"]},"metadata":{},"sourceType":"module"}